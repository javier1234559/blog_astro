---
export const prerender = false;

const { id } = Astro.params;

if (typeof id !== "string") {
  throw Error(`id should be string. Received: ${id}`);
}

let post;

try {
  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);
  if (!response.ok) {
    throw new Error(`Failed to fetch post: ${response.statusText}`);
  }
  post = await response.json();
} catch (error) {
  return new Response(null, {
    status: 404,
    statusText: 'Not Found',
  });
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
    }
    .prose {
      line-height: 1.6;
    }
  </style>
</head>
<body>
  <section class="px-6 py-12 max-w-7xl mx-auto min-h-[80vh]">
    <h1 class="text-3xl mb-4 font-bold uppercase md:text-5xl">{post.title}</h1>
    <p class="text-gray-500 mb-8">Post ID: {post.id}</p>
    <article class="prose prose-lg max-w-none">
      <p>{post.body}</p>
    </article>
  </section>
</body>
</html>
