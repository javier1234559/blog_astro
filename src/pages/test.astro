---
import PageLayout from "../layouts/PageLayout.astro";
import Renderer from "../components/Renderer.astro";
import { parseMarkdown } from "../lib/github";

const testMarkdown = `
# Heading 1
## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6

#### **Các đơn vị đo lường vàng tại Việt Nam:**

### 5. **DOJI (dojid.vn)**

Normal paragraph with **bold**, *italic*, and ~~strikethrough~~ text.

* Unordered list item 1
* Unordered list item 2
  * Nested item 2.1
  * Nested item 2.2

1. Ordered list item 1
2. Ordered list item 2
   1. Nested ordered item 2.1
   2. Nested ordered item 2.2

> This is a blockquote
> 
> It can span multiple lines

\`Inline code\` looks like this.

\`\`\`javascript
// Code block
function hello(name) {
  console.log(\`Hello, \${name}!\`);
}
\`\`\`

[This is a link](https://example.com)

![This is an image](https://via.placeholder.com/150)

| Table Header 1 | Table Header 2 |
|----------------|----------------|
| Row 1, Cell 1  | Row 1, Cell 2  |
| Row 2, Cell 1  | Row 2, Cell 2  |

---

Horizontal rule above

Term 1
: Definition 1

Term 2
: Definition 2

Here's a simple footnote[^1].

[^1]: This is the footnote content.

Task list:
- [x] Completed task
- [ ] Incomplete task


Here's a ~~strikethrough with [a link](https://example.com) inside~~.

\`\`\`python
# Python code block
def greet(name):
    print(f"Hello, {name}!")
\`\`\`

<div style="color: red;">
  This is some <strong>inline HTML</strong>
</div>

==This is marked text==

H~2~O

X^2^

++This is inserted text++

--This is deleted text--

::: info
This is an info custom container
:::

\`\`\`mermaid
graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;
\`\`\`

$e = mc^2$

$$
\\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}
$$
`;

const parsedContent = await parseMarkdown(testMarkdown);
console.log(parsedContent)
---

<PageLayout>
  <h1>Markdown Test Page</h1>
  <article slot="main">
    <Renderer content={parsedContent} />
  </article>
</PageLayout>